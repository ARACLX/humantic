version: 2.1

# Required Environment Variables that are used by configuration:
# CODECOV_TOKEN (Project-based)
# CODACY_PROJECT_TOKEN (Project-based)
# NPM_TOKEN (Project-based, can be global)
# SKIP_PREFLIGHT_CHECK (true)... Damn CRA :/
#
# DOCKER_LOGIN
# DOCKER_PASSWORD

orbs:
  node: circleci/node@4.0.0
  docker: circleci/docker@1.4.0
  codecov: codecov/codecov@1.1.1
  codacy: codacy/coverage-reporter@11.2.1

executors:
  # TODO: Setup machine-based executor since they are more flexible tan actual
  # Docker-based.
  node:
    docker:
      - image: cimg/base:2020.01
      - image: circleci/mongo:latest

jobs:
  build:
    working_directory: ~/humantic
    executor: node
    steps:
      - checkout
      - node/install:
          install-yarn: true
          lts: true
      - node/install-yarn
      - run: node --version
      - run: yarn --version
      - node/install-packages:
          app-dir: ~/humantic
          pkg-manager: yarn
      - run: yarn build

  test_unit:
    working_directory: ~/humantic
    executor: node
    steps:
      - checkout
      - node/install:
          install-yarn: true
          lts: true
      - node/install-yarn
      - run: node --version
      - run: yarn --version
      - node/install-packages:
          app-dir: ~/humantic
          pkg-manager: yarn
      - run: yarn test:unit
  # TODO: This step should merge coverage generated by E2E, Integration and Units
  # tests, as a tempomary solution it will just generate coverage.
  coverage:
    working_directory: ~/humantic
    executor: node
    steps:
      - checkout
      - node/install:
          install-yarn: true
          lts: true
      - node/install-packages:
          app-dir: ~/humantic
          pkg-manager: yarn
      - run: yarn test:cov
      - codecov/upload
      - codacy/send_report

  # Publish packages contained in repository to NPM.
  # TODO: Packages should be stored on GitHub Packages instead NPM.
  publish:
    working_directory: ~/humantic
    executor: node
    steps:
      - checkout
      - node/install:
          install-yarn: true
          lts: true
      - node/install-yarn
      - node/install-packages:
          app-dir: ~/humantic
          pkg-manager: yarn
          override-ci-command: yarn --frozen-lockfile
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/humantic/.npmrc
      - run: yarn run lerna publish from-package -y

workflows:
  devlane:
    jobs:
      - build
      - test_unit:
          requires:
            - build
      - coverage:
          requires:
            - build
      # TODO: (HUM-4) While we'll finalize this task, this step should be exectuted
      # only after passed build and tests because this will be deployed on staging
      # and then when on a specific branch deployed to production.
      # NOTE: @ZiQiLN have created Docker-based pipelane on Docker website.
      # - docker/publish:
      #    requires:
      #     - build
      #     - test_unit
      #     - coverage
      #    image: humwrk/api
      #    docker-context: ~/project/services/api
      #    path: ~/project/services/api
      #    readme: README.md
      #    tag: dev
      #    dockerfile: .docker/Dockerfile
      #    update-description: true
      #    registry: docker.io
      # - docker/publish:
      #    requires:
      #     - build
      #    image: humwrk/ui
      #    docker-context: ~/project/services/ui
      #    path: ~/project/services/ui
      #    readme: README.md
      #    tag: dev
      #    dockerfile: .docker/Dockerfile
      #    update-description: true
      #    registry: docker.io
